name: Build and Release Executables

on:
  release:
    types: [published]
  push:
    tags:
      - 'v*'
  workflow_dispatch:  # 수동 실행 가능

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller
        pip install -r requirements.txt
    
    - name: Build GUI executable (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        pyinstaller --onefile --windowed --name "빛이왔다_스타워게즈_댓글수집기" --icon=icon.ico gui_main.py || pyinstaller --onefile --windowed --name "빛이왔다_스타워게즈_댓글수집기" gui_main.py
        pyinstaller --onefile --name "빛이왔다_스타워게즈_댓글수집기_터미널" main.py
    
    - name: Build GUI executable (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        pyinstaller --onefile --windowed --name "빛이왔다_스타워게즈_댓글수집기" gui_main.py
        pyinstaller --onefile --name "빛이왔다_스타워게즈_댓글수집기_터미널" main.py
        # macOS용 DMG 생성 시도
        hdiutil create -volname "빛이왔다 스타워게즈 댓글수집기" -srcfolder dist -ov -format UDZO "빛이왔다_스타워게즈_댓글수집기.dmg" || echo "DMG creation failed, using tar.gz"
    
    - name: Build GUI executable (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        pyinstaller --onefile --name "빛이왔다_스타워게즈_댓글수집기" gui_main.py
        pyinstaller --onefile --name "빛이왔다_스타워게즈_댓글수집기_터미널" main.py
    
    - name: Create release archive (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        7z a "빛이왔다_스타워게즈_댓글수집기_Windows.zip" ./dist/*
    
    - name: Create release archive (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        if [ -f "빛이왔다_스타워게즈_댓글수집기.dmg" ]; then
          echo "DMG file created successfully"
        else
          tar -czf "빛이왔다_스타워게즈_댓글수집기_macOS.tar.gz" -C dist .
        fi
    
    - name: Create release archive (Linux)
      if: matrix.os == 'ubuntu-latest'
      run: |
        tar -czf "빛이왔다_스타워게즈_댓글수집기_Linux.tar.gz" -C dist .
    
    - name: Upload to Release (Windows)
      if: (github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')) && matrix.os == 'windows-latest'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: "빛이왔다_스타워게즈_댓글수집기_Windows.zip"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload to Release (macOS)
      if: (github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')) && matrix.os == 'macos-latest'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: |
          빛이왔다_스타워게즈_댓글수집기.dmg
          빛이왔다_스타워게즈_댓글수집기_macOS.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload to Release (Linux)
      if: (github.event_name == 'release' || startsWith(github.ref, 'refs/tags/')) && matrix.os == 'ubuntu-latest'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        files: "빛이왔다_스타워게즈_댓글수집기_Linux.tar.gz"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 